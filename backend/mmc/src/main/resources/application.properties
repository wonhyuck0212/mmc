server.port=8083

# MySQL 연결
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# DB Source URL
spring.datasource.url=jdbc:mysql://i8a508.p.ssafy.io:3306/mmc?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&serverTimezone=Asia/Seoul
#spring.datasource.url=jdbc:mysql://localhost:3306/mmc?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&serverTimezone=Asia/Seoul

# DB username
spring.datasource.username=mmt

# DB password
#spring.datasource.password=a508
spring.datasource.password=a508a508

# true 설정시 JPA 쿼리문 확인 가능
# 처리시 발생하는 SQL을 보여줄 것인지 결정
spring.jpa.show-sql=true

# DDL(create, alter, drop) 정의시 DB의 고유 기능을 사용할 수 있다.
# 프로젝트 실행시 자동으로 DDL(create, alter, drop) 을 생성할 것 인지 결정하는 설정
# create : 매번 테이블 생성을 새로 시도한다 / update : 변경이 필요한 경우 alter로 변경되고 테이블이 없는경우 create가 된다
spring.jpa.hibernate.ddl-auto=none

# JPA의 구현체의 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여준다.
# 실제 JPA 구현체인 Hibernate가 동작하면서 발생하는 SQL을 포맷팅해서 출력한다 -> 실행되는 SQL의 가독성을 높여준다
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace

#jwt
# 토큰 유효 기간(min - 통상 2시간 정도이므로 120)
jwt.expmin=2

# 토큰 생성에 사용할 salt
jwt.salt = hyeungkyun

#s3 설정
cloud.aws.credentials.access-key=
cloud.aws.credentials.secret-key=
cloud.aws.region.static=ap-northeast-2
cloud.aws.stack.auto=false
cloud.aws.s3.bucket=ssafy-mmc
cloud.aws.s3.bucket.url=https://s3.ap-northeast-2.amazonaws.com/ssafy-mmc

spring.web.resources.static-locations=classpath:/static/
